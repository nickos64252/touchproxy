<Window 
	x:Class="frog.Windows.TouchProxy.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	xmlns:local="clr-namespace:frog.Windows.TouchProxy"
	xmlns:behaviors="clr-namespace:frog.Windows.TouchProxy.Behaviors" 
	xmlns:controls="clr-namespace:frog.Windows.TouchProxy.Controls"
	xmlns:converters="clr-namespace:frog.Windows.TouchProxy.Converters"
	xmlns:services="clr-namespace:frog.Windows.TouchProxy.Services" 
	Title="TouchProxy"
    Width="1080"
    Height="760" 
	WindowStartupLocation="CenterScreen" 
	ResizeMode="CanMinimize"
	Background="#FFFCFCFC">
    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>
    <Grid Margin="15,5,15,15">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="500" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="37*" />
            <RowDefinition Height="5*"/>
            <RowDefinition Height="Auto" MinHeight="459" />
        </Grid.RowDefinitions>

        <GroupBox Grid.Column="0" Grid.Row="0" Margin="0,0,0,1" Grid.RowSpan="1">
            <GroupBox.Header>
                <Label Content="CONFIGURATION" />
            </GroupBox.Header>
            <DockPanel>

                <StackPanel DockPanel.Dock="Left" Orientation="Vertical">
                    <CheckBox IsChecked="{Binding Path=TouchInjectionService.IsEnabled, Mode=TwoWay}" Content="Service" Style="{StaticResource ToggleSwitchCheckBoxStyle}" />
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <TextBlock Text="Port (UDP):" Width="85" VerticalAlignment="Center" />
                        <controls:ConstrainedTextBox Text="{Binding Path=TouchInjectionService.Port, Mode=TwoWay}" ConstraintPredicate="{Binding Path=TouchInjectionService.IsPortValidPredicate}" Width="50" VerticalAlignment="Center">
                            <controls:ConstrainedTextBox.Style>
                                <Style TargetType="{x:Type controls:ConstrainedTextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=TouchInjectionService.IsEnabled}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </controls:ConstrainedTextBox.Style>
                        </controls:ConstrainedTextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <TextBlock Text="Display Target:" Width="85" VerticalAlignment="Center" />
                        <ComboBox ItemsSource="{Binding Path=ScreenTargets}" DisplayMemberPath="Value" SelectedValuePath="Key" SelectedValue="{Binding Path=SelectedScreenTarget, Mode=TwoWay}" VerticalAlignment="Center" />
                    </StackPanel>
                    <!--CheckBox IsChecked="{Binding Path=TouchInjectionService.IsContactEnabled, Mode=TwoWay}" Content="Enable Contacts" Margin="0,12,0,0" /-->
                    <CheckBox IsChecked="{Binding Path=TouchInjectionService.IsWindowsKeyPressEnabled, Mode=TwoWay}" Margin="0,5,0,0">
                        <CheckBox.Content>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Enable" VerticalAlignment="Top" />
                                <Rectangle Fill="{StaticResource WindowsKeyIcon}" Width="16" Height="16" Margin="4,1,4,0" VerticalAlignment="Top" SnapsToDevicePixels="True" />
                                <TextBlock Text="Key With" VerticalAlignment="Top" />
                                <ComboBox ItemsSource="{Binding Path=TouchInjectionService.WindowsKeyPressTouchCounts}" SelectedValue="{Binding Path=TouchInjectionService.WindowsKeyPressTouchCount, Mode=TwoWay}" Margin="4,-3,4,0" VerticalAlignment="Top" />
                                <TextBlock Text="Touches" VerticalAlignment="Top" />
                            </StackPanel>
                        </CheckBox.Content>
                    </CheckBox>
                    <CheckBox IsChecked="{Binding Path=TouchInjectionService.IsContactVisible, Mode=TwoWay}" Content="Show Contacts" Margin="0,2,0,0">
                        <CheckBox.Style>
                            <Style TargetType="{x:Type CheckBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TouchInjectionService.IsEnabled}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                </StackPanel>

                <StackPanel DockPanel.Dock="Left" Orientation="Vertical" Margin="0,0,5,0" HorizontalAlignment="Stretch">
                    <Grid Width="180" HorizontalAlignment="Right" VerticalAlignment="Top">
                        <CheckBox IsChecked="{Binding Path=HostedNetworkService.IsEnabled, Mode=TwoWay}" Content="Hosted Network">
                            <CheckBox.Style>
                                <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ToggleSwitchCheckBoxStyle}">
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=HostedNetworkService.HasValidationErrors}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                        <Rectangle Fill="{StaticResource InfoIcon}" Stretch="Uniform" Width="14" Height="14" Margin="6,1,1,1" HorizontalAlignment="Right" VerticalAlignment="Center" SnapsToDevicePixels="True" ToolTipService.ShowDuration="10000" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType=Grid, AncestorLevel=1}}" ToolTipService.Placement="Relative" ToolTipService.HorizontalOffset="-26" ToolTipService.VerticalOffset="21">
                            <Rectangle.ToolTip>
                                <TextBlock Text="{Binding Path=HostedNetworkService.StatusInfo, Mode=OneWay}" Margin="-6,-4" Padding="25,20,25,10" Foreground="#FFE6E6E6" Background="#FF000000" FontFamily="Lucida Console" />
                            </Rectangle.ToolTip>
                        </Rectangle>
                    </Grid>
                    <StackPanel Orientation="Horizontal" Width="180" Margin="0,10,0,0" HorizontalAlignment="Right">
                        <TextBlock Text="SSID:" Width="40" VerticalAlignment="Center" />
                        <TextBox Text="{Binding Path=HostedNetworkService.SSID, Mode=TwoWay, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" Validation.ErrorTemplate="{StaticResource textBoxValidationErrorTemplate}" MaxLength="32" Width="140" VerticalAlignment="Center">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=HostedNetworkService.IsEnabled}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Width="180" Margin="0,10,0,0" HorizontalAlignment="Right">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Key:" Width="40" VerticalAlignment="Center" />
                            <PasswordBox behaviors:PasswordBoxBindingBehavior.Attach="True" behaviors:PasswordBoxBindingBehavior.Password="{Binding Path=HostedNetworkService.SecurityKey, Mode=TwoWay, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" Validation.ErrorTemplate="{StaticResource textBoxValidationErrorTemplate}" MaxLength="63" Width="140" VerticalAlignment="Center">
                                <PasswordBox.Style>
                                    <Style TargetType="{x:Type PasswordBox}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type PasswordBox}">
                                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                                        <Grid>
                                                            <ScrollViewer x:Name="PART_ContentHost" Visibility="Visible" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                                                            <TextBlock x:Name="passwordDisplay" Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type PasswordBox}, Mode=FindAncestor}, Path=DataContext.HostedNetworkService.SecurityKey}" Visibility="Hidden" Padding="2,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Background="Transparent" />
                                                            <Rectangle x:Name="revealButton" Visibility="Hidden" Fill="{StaticResource PasswordBoxRevealIcon}" Width="12" Height="12" Margin="3,2,3,0" HorizontalAlignment="Right" VerticalAlignment="Center">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="MouseDown">
                                                                        <ei:ChangePropertyAction TargetName="passwordDisplay" PropertyName="Visibility" Value="Visible" />
                                                                        <ei:ChangePropertyAction TargetName="PART_ContentHost" PropertyName="Visibility" Value="Hidden" />
                                                                    </i:EventTrigger>
                                                                    <i:EventTrigger EventName="MouseUp">
                                                                        <ei:ChangePropertyAction TargetName="passwordDisplay" PropertyName="Visibility" Value="Hidden" />
                                                                        <ei:ChangePropertyAction TargetName="PART_ContentHost" PropertyName="Visibility" Value="Visible" />
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </Rectangle>
                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA" />
                                                            <Setter Property="Visibility" TargetName="revealButton" Value="Visible" />
                                                        </Trigger>
                                                        <Trigger Property="IsKeyboardFocused" Value="True">
                                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=HostedNetworkService.IsEnabled}" Value="True">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </PasswordBox.Style>
                            </PasswordBox>
                        </StackPanel>
                        <CheckBox IsChecked="{Binding Path=HostedNetworkService.IsSecurityKeyPersistent, Mode=TwoWay}" Content="Persistent" Margin="39,5,0,0">
                            <CheckBox.Style>
                                <Style TargetType="{x:Type CheckBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=HostedNetworkService.IsEnabled, Mode=TwoWay}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>

                        <TextBlock Text="About" Margin="0,35,3,0" HorizontalAlignment="Right" Style="{StaticResource HyperlinkTextBlockStyle}">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="MouseLeftButtonUp">
									<ei:CallMethodAction TargetObject="{Binding}" MethodName="NavigateAbout" />
								</i:EventTrigger>
							</i:Interaction.Triggers>
                        </TextBlock>

                    </StackPanel>
                </StackPanel>

            </DockPanel>
        </GroupBox>

        <GroupBox Grid.Column="0" MinWidth="480" MinHeight="140" VerticalAlignment="Top" Height="140" Grid.RowSpan="2" Margin="-1,0,1,0" Grid.Row="1" >
            <GroupBox.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="0.295"/>
                    <TranslateTransform/>
                </TransformGroup>
            </GroupBox.RenderTransform>
            <GroupBox.Header>
                <Label Content="MAPPING" />
            </GroupBox.Header>
            <Grid Height="120" Margin="-10,0,-10,-28">
                <StackPanel Orientation="Vertical">
                    <DockPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                            <StackPanel Orientation="Vertical" Margin="0,0,0,0">
                                <Slider Tag="Use 2DCur" Value="{Binding Path=TouchInjectionService.Use2DCursor, Mode=TwoWay}" Style="{StaticResource SliderChecker}" />
                                <Slider Tag="Use 2DObj" Value="{Binding Path=TouchInjectionService.Use2DObject, Mode=TwoWay}" Style="{StaticResource SliderChecker}" />
                                <Slider Tag="Use 2DBlb" Value="{Binding Path=TouchInjectionService.Use2DBlob, Mode=TwoWay}" Style="{StaticResource SliderChecker}" />
                                <!-- CheckBox IsChecked="{Binding Path=TouchInjectionService.Use2DCursor, Mode=TwoWay}" Content="Use 2DCur" Style="{StaticResource ToggleSwitchCheckBoxStyle}" /-->
                                <!--CheckBox IsChecked="{Binding Path=TouchInjectionService.Use2DObject, Mode=TwoWay}" Content="Use 2DObj" Style="{StaticResource ToggleSwitchCheckBoxStyle}" /-->
                                <!--CheckBox IsChecked="{Binding Path=TouchInjectionService.Use2DBlob, Mode=TwoWay}" Content="Use 2DBlb" Style="{StaticResource ToggleSwitchCheckBoxStyle}" /-->
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="20,0,0,0">
                                <Slider Tag="Use 25DCur" Value="{Binding Path=TouchInjectionService.Use25DCursor, Mode=TwoWay}" Style="{StaticResource SliderChecker}" />
                                <Slider Tag="Use 25DObj" Value="{Binding Path=TouchInjectionService.Use25DObject, Mode=TwoWay}" Style="{StaticResource SliderChecker}" />
                                <Slider Tag="Use 25DBlb" Value="{Binding Path=TouchInjectionService.Use25DBlob, Mode=TwoWay}" Style="{StaticResource SliderChecker}" />
                                <!--CheckBox IsChecked="{Binding Path=TouchInjectionService.Use25DCursor, Mode=TwoWay}" Content="Use 25DCur" Style="{StaticResource ToggleSwitchCheckBoxStyle}" /-->
                                <!--CheckBox IsChecked="{Binding Path=TouchInjectionService.Use25DObject, Mode=TwoWay}" Content="Use 25DObj" Style="{StaticResource ToggleSwitchCheckBoxStyle}" /-->
                                <!--CheckBox IsChecked="{Binding Path=TouchInjectionService.Use25DBlob, Mode=TwoWay}" Content="Use 25DBlb" Style="{StaticResource ToggleSwitchCheckBoxStyle}" /-->
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="20,0,0,0">
                                <Slider Tag="Use 3DCur" Value="{Binding Path=TouchInjectionService.Use3DCursor, Mode=TwoWay}" Style="{StaticResource SliderChecker}" />
                                <Slider Tag="Use 3DObj" Value="{Binding Path=TouchInjectionService.Use3DObject, Mode=TwoWay}" Style="{StaticResource SliderChecker}" />
                                <Slider Tag="Use 3DBlb" Value="{Binding Path=TouchInjectionService.Use3DBlob, Mode=TwoWay}" Style="{StaticResource SliderChecker}" />
                                <!--CheckBox IsChecked="{Binding Path=TouchInjectionService.Use3DCursor, Mode=TwoWay}" Content="Use 3DCur" Style="{StaticResource ToggleSwitchCheckBoxStyle}" /-->
                                <!--CheckBox IsChecked="{Binding Path=TouchInjectionService.Use3DObject, Mode=TwoWay}" Content="Use 3DObj" Style="{StaticResource ToggleSwitchCheckBoxStyle}" /-->
                                <!--CheckBox IsChecked="{Binding Path=TouchInjectionService.Use3DBlob, Mode=TwoWay}" Content="Use 3DBlb" Style="{StaticResource ToggleSwitchCheckBoxStyle}" /-->
                            </StackPanel>
                        </StackPanel>

                    </DockPanel>
                    <DockPanel >

                        <StackPanel Orientation="Horizontal" Margin="0,5,0,0">


                            <!--CheckBox x:Name="Click25D" IsChecked="{Binding Path=TouchInjectionService.Use25DasClick, Mode=TwoWay}" Content="Use 25D as Click" Style="{StaticResource ToggleSwitchCheckBoxStyle}" /-->

                            <StackPanel Orientation="Horizontal" Margin="0,10,0,0" IsEnabled="{Binding ElementName=Click25D, Path=IsChecked}">
                                <TextBlock Text="Click Threshold :" Width="85" VerticalAlignment="Top" />
                                <TextBox  Text="{Binding Path=TouchInjectionService.ClickThreshold, Mode=TwoWay}" Width="100" HorizontalAlignment="Right" VerticalAlignment="Top" />
                            </StackPanel>




                        </StackPanel>
                    </DockPanel>
                </StackPanel>
            </Grid>

        </GroupBox>

        <GroupBox Grid.Column="0" Grid.Row="2" MinWidth="480" MinHeight="360" VerticalAlignment="Top" Height="360" Margin="0,110,0,0">
            <GroupBox.Header>
                <Label Content="CALIBRATION" />
            </GroupBox.Header>
            <Grid Width="480" Margin="0,0,-12,-19">
                <Grid Width="{Binding Path=CalibrationPanelSize.Width}" Height="{Binding Path=CalibrationPanelSize.Height}" Background="#FF000000" Margin="0,0,0,43">
                    <Grid.Resources>
                        <converters:CalibrationBufferMarkerTransformConverter x:Key="calibrationBufferMarkerTransformConverter" />
                        <Style TargetType="{x:Type Slider}">
                            <Setter Property="Minimum" Value="{Binding Path=TouchInjectionService.CalibrationBufferMinLength}" />
                            <Setter Property="Maximum" Value="{Binding Path=TouchInjectionService.CalibrationBufferMaxLength}" />
                            <Setter Property="SmallChange" Value="1" />
                            <Setter Property="LargeChange" Value="1" />
                            <Setter Property="IsSnapToTickEnabled" Value="True" />
                            <Setter Property="TickFrequency" Value="1" />
                        </Style>
                        <Style x:Key="markerRectangle" TargetType="{x:Type Rectangle}">
                            <Setter Property="Fill" Value="#FF999999" />
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                        </Style>
                    </Grid.Resources>

                    <!-- Primary Screen Reference Overlay -->
                    <Rectangle Width="{Binding Path=PrimaryScreenRect.Width}" Height="{Binding Path=PrimaryScreenRect.Height}" HorizontalAlignment="Left" VerticalAlignment="Top" Fill="#3346BD00">
                        <Rectangle.RenderTransform>
                            <TranslateTransform X="{Binding Path=PrimaryScreenRect.Left}" Y="{Binding Path=PrimaryScreenRect.Top}" />
                        </Rectangle.RenderTransform>
                    </Rectangle>

                    <!-- Screen Coordinates Labels -->
                    <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="7,5,0,0" Foreground="#FFCCCCCC">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0},{1}">
                                <Binding Path="TouchInjectionService.ScreenRect.Left" />
                                <Binding Path="TouchInjectionService.ScreenRect.Top" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,7,5" Foreground="#FFCCCCCC">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0},{1}">
                                <Binding Path="TouchInjectionService.ScreenRect.Right" />
                                <Binding Path="TouchInjectionService.ScreenRect.Bottom" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <!-- Screen Dimensions Labels -->
                    <TextBlock Text="{Binding Path=TouchInjectionService.ScreenRect.Width}" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                        <TextBlock.RenderTransform>
                            <TranslateTransform X="0" Y="20" />
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    <TextBlock Text="{Binding Path=TouchInjectionService.ScreenRect.Height}" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <TextBlock.RenderTransform>
                            <TranslateTransform X="35" Y="0" />
                        </TextBlock.RenderTransform>
                    </TextBlock>

                    <!-- Left Calibration Control & Marker -->
                    <Rectangle Width="1" Height="15" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource markerRectangle}">
                        <Rectangle.RenderTransform>
                            <TranslateTransform X="{Binding ElementName=markerTransformLeft, Path=X}" Y="-15" />
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Rectangle Width="1" HorizontalAlignment="Left" VerticalAlignment="Stretch" Style="{StaticResource markerRectangle}">
                        <Rectangle.RenderTransform>
                            <TranslateTransform x:Name="markerTransformLeft" Y="0">
                                <TranslateTransform.X>
                                    <MultiBinding Converter="{StaticResource calibrationBufferMarkerTransformConverter}">
                                        <Binding Path="CalibrationPanelSize.Width" />
                                        <Binding Path="TouchInjectionService.ScreenRect.Width" />
                                        <Binding ElementName="sliderLeft" Path="Value" />
                                        <Binding Source="True" />
                                    </MultiBinding>
                                </TranslateTransform.X>
                            </TranslateTransform>
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Rectangle Width="1" Height="15" HorizontalAlignment="Left" VerticalAlignment="Bottom" Style="{StaticResource markerRectangle}">
                        <Rectangle.RenderTransform>
                            <TranslateTransform X="{Binding ElementName=markerTransformLeft, Path=X}" Y="15" />
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <TextBlock Text="{Binding ElementName=sliderLeft, Path=Value}" Width="30" HorizontalAlignment="Left" VerticalAlignment="Top" TextAlignment="Center">
                        <TextBlock.RenderTransform>
                            <TranslateTransform X="-15" Y="-59" />
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    <TextBox x:Name="sliderLeft" Text="{Binding Path=TouchInjectionService.CalibrationBufferLeft, Mode=TwoWay}" Width="40" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <TextBox.RenderTransform>
                            <TranslateTransform X="-20" Y="-40" />
                        </TextBox.RenderTransform>

                    </TextBox>

                    <!-- Top Calibration Control & Marker -->
                    <Rectangle Width="15" Height="1" HorizontalAlignment="Right" VerticalAlignment="Top" Style="{StaticResource markerRectangle}">
                        <Rectangle.RenderTransform>
                            <TranslateTransform X="15" Y="{Binding ElementName=markerTransformTop, Path=Y}" />
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Rectangle Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" Style="{StaticResource markerRectangle}">
                        <Rectangle.RenderTransform>
                            <TranslateTransform x:Name="markerTransformTop" X="0">
                                <TranslateTransform.Y>
                                    <MultiBinding Converter="{StaticResource calibrationBufferMarkerTransformConverter}">
                                        <Binding Path="CalibrationPanelSize.Height" />
                                        <Binding Path="TouchInjectionService.ScreenRect.Height" />
                                        <Binding ElementName="sliderTop" Path="Value" />
                                        <Binding Source="True" />
                                    </MultiBinding>
                                </TranslateTransform.Y>
                            </TranslateTransform>
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Rectangle Width="15" Height="1" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource markerRectangle}">
                        <Rectangle.RenderTransform>
                            <TranslateTransform X="-15" Y="{Binding ElementName=markerTransformTop, Path=Y}" />
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <TextBlock Text="{Binding ElementName=sliderTop, Path=Value}" Width="30" HorizontalAlignment="Right" VerticalAlignment="Top" TextAlignment="Left">
                        <TextBlock.RenderTransform>
                            <TranslateTransform X="76" Y="-8" />
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    <TextBox x:Name="sliderTop" Text="{Binding Path=TouchInjectionService.CalibrationBufferTop, Mode=TwoWay}" Width="40" HorizontalAlignment="Right" VerticalAlignment="Top" >
                        <TextBox.RenderTransform>
                            <TranslateTransform X="60" Y="-9" />
                        </TextBox.RenderTransform>
                    </TextBox>

                    <!-- Right Calibration Control & Marker -->
                    <Rectangle Width="1" Height="15" HorizontalAlignment="Right" VerticalAlignment="Top" Style="{StaticResource markerRectangle}">
                        <Rectangle.RenderTransform>
                            <TranslateTransform X="{Binding ElementName=markerTransformRight, Path=X}" Y="-15" />
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Rectangle Width="1" HorizontalAlignment="Right" VerticalAlignment="Stretch" Style="{StaticResource markerRectangle}">
                        <Rectangle.RenderTransform>
                            <TranslateTransform x:Name="markerTransformRight" Y="0">
                                <TranslateTransform.X>
                                    <MultiBinding Converter="{StaticResource calibrationBufferMarkerTransformConverter}">
                                        <Binding Path="CalibrationPanelSize.Width" />
                                        <Binding Path="TouchInjectionService.ScreenRect.Width" />
                                        <Binding ElementName="sliderRight" Path="Value" />
                                        <Binding Source="False" />
                                    </MultiBinding>
                                </TranslateTransform.X>
                            </TranslateTransform>
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Rectangle Width="1" Height="15" HorizontalAlignment="Right" VerticalAlignment="Bottom" Style="{StaticResource markerRectangle}">
                        <Rectangle.RenderTransform>
                            <TranslateTransform X="{Binding ElementName=markerTransformRight, Path=X}" Y="15" />
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <TextBlock Text="{Binding ElementName=sliderRight, Path=Value}" Width="30" HorizontalAlignment="Right" VerticalAlignment="Bottom" TextAlignment="Center">
                        <TextBlock.RenderTransform>
                            <TranslateTransform X="15" Y="58" />
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    <TextBox x:Name="sliderRight" Text="{Binding Path=TouchInjectionService.CalibrationBufferRight, Mode=TwoWay}" Width="40" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                        <TextBox.RenderTransform>
                            <TranslateTransform X="19" Y="40" />
                        </TextBox.RenderTransform>
                    </TextBox>

                    <!-- Bottom Calibration Control & Marker -->
                    <Rectangle Width="15" Height="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Style="{StaticResource markerRectangle}">
                        <Rectangle.RenderTransform>
                            <TranslateTransform Y="{Binding ElementName=markerTransformBottom, Path=Y}" X="15" />
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Rectangle Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Style="{StaticResource markerRectangle}">
                        <Rectangle.RenderTransform>
                            <TranslateTransform x:Name="markerTransformBottom" X="0">
                                <TranslateTransform.Y>
                                    <MultiBinding Converter="{StaticResource calibrationBufferMarkerTransformConverter}">
                                        <Binding Path="CalibrationPanelSize.Height" />
                                        <Binding Path="TouchInjectionService.ScreenRect.Height" />
                                        <Binding ElementName="sliderBottom" Path="Value" />
                                        <Binding Source="False" />
                                    </MultiBinding>
                                </TranslateTransform.Y>
                            </TranslateTransform>
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Rectangle Width="15" Height="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Style="{StaticResource markerRectangle}">
                        <Rectangle.RenderTransform>
                            <TranslateTransform Y="{Binding ElementName=markerTransformBottom, Path=Y}" X="-15" />
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <TextBlock Text="{Binding ElementName=sliderBottom, Path=Value}" Width="30" HorizontalAlignment="Left" VerticalAlignment="Bottom" TextAlignment="Right">
                        <TextBlock.RenderTransform>
                            <TranslateTransform X="-76" Y="7" />
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    <TextBox x:Name="sliderBottom" Text="{Binding Path=TouchInjectionService.CalibrationBufferBottom, Mode=TwoWay}" Width="40" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                        <TextBox.RenderTransform>
                            <TranslateTransform X="-60" Y="9" />
                        </TextBox.RenderTransform>
                    </TextBox>

                    <!-- Touch Marker Display -->
                    <ItemsControl ItemsSource="{Binding Path=TouchMarkers}" IsHitTestVisible="False" Margin="0,0,0,104">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Ellipse 
									Width="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl, AncestorLevel=1}, Path=DataContext.TouchMarkerSize.Width, Mode=OneTime}" 
									Height="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl, AncestorLevel=1}, Path=DataContext.TouchMarkerSize.Height, Mode=OneTime}" 
									Fill="#FF46BD00">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform x:Name="translateTransform" X="{Binding Path=X}" Y="{Binding Path=Y}" />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </Grid>
        </GroupBox>

        <GroupBox Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" Margin="15,0,0,0">
            <GroupBox.Header>
                <Label Content="DIAGNOSTICS" />
            </GroupBox.Header>
            <DockPanel>
                <StackPanel DockPanel.Dock="Top" Orientation="Vertical">
                    <TextBlock Text="Available Networks" HorizontalAlignment="Left" />
                    <ListView ItemsSource="{Binding Path=NetworkService.NetworkInterfaceInfos}" Margin="0,5,0,0" BorderBrush="#FF999999">
                        <ListView.Resources>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="Padding" Value="6,0,12,0" />
                                <Setter Property="Margin" Value="0,2,2,0" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="GridViewColumnHeader">
                                            <Grid>
                                                <Border Padding="6,0,12,0" Background="#FFE6E6E6">
                                                    <ContentPresenter Margin="0,0,0,2" HorizontalAlignment="Left" />
                                                </Border>
                                                <Thumb x:Name="PART_HeaderGripper" Margin="0,0,-9,0" HorizontalAlignment="Right">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="Width" Value="18" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent">
                                                                            <Rectangle Width="1" />
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border Padding="2">
                                                <GridViewRowPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.Resources>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn DisplayMemberBinding="{Binding Path=Address}" Header="Address" Width="100" />
                                <GridViewColumn DisplayMemberBinding="{Binding Path=Type}" Header="Type" Width="80" />
                                <GridViewColumn DisplayMemberBinding="{Binding Path=Description}" Header="Description" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                </StackPanel>
                <Grid DockPanel.Dock="Top" Margin="0,20,0,0">
                    <CheckBox IsChecked="{Binding Path=IsProtocolTraceEnabled, Mode=TwoWay}" Content="Trace Output" Style="{StaticResource ToggleSwitchCheckBoxStyle}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,0,3" />
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                        <TextBlock Text="Protocol: " VerticalAlignment="Center" />
                        <ComboBox ItemsSource="{Binding Path=ProtocolTraceCategories}" DisplayMemberPath="Value" SelectedValuePath="Key" SelectedValue="{Binding Path=SelectedProtocolTraceCategory, Mode=TwoWay}" Margin="5,0,0,0" VerticalAlignment="Center" />
                        <Button Width="20" Height="20" Margin="10,0,5,0" HorizontalAlignment="Right" VerticalAlignment="Bottom" BorderThickness="0" Background="Transparent" ToolTip="Clear">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ei:CallMethodAction TargetObject="{Binding ElementName=protocolTraceTextBox}" MethodName="Clear" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Button.Content>
                                <Rectangle Fill="{StaticResource ClearIcon}" Width="10" Height="10" Stretch="Fill" SnapsToDevicePixels="True" />
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </Grid>
                <TextBox x:Name="protocolTraceTextBox" behaviors:TextBoxAutoScrollBehavior.ScrollOnTextChanged="True" VerticalScrollBarVisibility="Auto" IsReadOnly="True" IsUndoEnabled="False" DockPanel.Dock="Top" Margin="0,5,0,0" VerticalAlignment="Stretch" BorderBrush="#FF999999" BorderThickness="1">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="ProtocolTraceTextBox" Value="{Binding ElementName=protocolTraceTextBox}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
            </DockPanel>
        </GroupBox>
    </Grid>
</Window>
